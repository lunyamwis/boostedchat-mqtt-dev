name: Deploy to production

on:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

env:
   REGISTRY: docker.io
   IMAGE_NAME: lunyamwimages/boostedchatmqtt-dev:latest

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9]
    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker compose build --no-cache --force-rm 
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login To Docker Hub
      uses: docker/login-action@v3 # mr-smithers-excellent/docker-build-push@v4 # use existing coker action
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }} 

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: "{{defaultContext}}"
        push: true
        tags: lunyamwimages/boostedchatmqtt-dev:latest
    - name: Authenticate with Google Cloud
    - uses: 'google-github-actions/auth@v2'
      with:
        project_id: 'boostedchatapi'
        workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }} 
        service_account_email: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
  

    # - name: Set up ssh agent
    #   uses: webfactory/ssh-agent@v0.9.0
    #   with:
    #     ssh-private-key: ${{ secrets.STAGING_DEPLOY_SSH_PRIVATE_KEY }}

    # - name: Add server to known_hosts
    #   run: |
    #     ssh-keyscan -H 35.237.192.231 >> ~/.ssh/known_hosts

    # - name: Test SSH connection
    #   run: |
    #     ssh -v root@35.237.192.231 'echo "I AM IN THE SERVER"'
    #   env:
    #     SSH_PRIVATE_KEY: ${{ secrets.STAGING_DEPLOY_SSH_PRIVATE_KEY }}
  
    - name: Pull latest image and builde docker on production server
      run: |
        ssh root@35.237.192.231 '
            cd /root/boostedchat-site && \
            docker pull lunyamwimages/boostedchatmqtt-dev:latest && \
            if [ "$(docker ps -a -q -f name=boostedchat-site-mqtt-1)" ]; then \
              docker stop boostedchat-site-mqtt-1 && docker rm boostedchat-site-mqtt-1 && \
              unset DOCKER_HOST && docker compose --env-file .env up --build -d mqtt; \
            else \
              echo "No such container: boostedchat-site-mqtt-1, starting mqtt service" && docker compose --env-file .env up -d mqtt; \
            fi
          '

    #   env:
    #     SSH_PRIVATE_KEY: ${{ secrets.STAGING_DEPLOY_SSH_PRIVATE_KEY }}